// npx tsx scripts/create-test-gift.ts

import { db } from "../src/server/db";
import { saveGiftContent, generateContentPath } from "../src/lib/giftContent";
import type { GiftContent } from "../src/types/gift";

async function createTestGift() {
  console.log("üéÅ –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫...");
  
  try {
    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const giftRecord = await db.gift.create({
      data: {
        number: Math.floor(Math.random() * 1000) + 1,
        title: "–¢–µ—Å—Ç",
        isSecret: false,
        openDate: new Date(), // –î–æ—Å—Ç—É–ø–µ–Ω —Å—Ä–∞–∑—É
        englishDescription: "Each memory has a soundtrack of its own",
        hintImageUrl: "/uploads/1748280744731_image.png",
        hintText: "look for a gift with this sticker",
        code: "LOVE2024",
        contentPath: "" // –∑–∞–ø–æ–ª–Ω–∏–º –Ω–∏–∂–µ
      }
    });

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å –ø–æ–¥–∞—Ä–∫–∞ —Å ID: ${giftRecord.id}`);

    // –°–æ–∑–¥–∞–µ–º –±–æ–≥–∞—Ç—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞
    const content: GiftContent = {
      blocks: [
        {
          type: "text",
          content: "–î–æ—Ä–æ–≥–∞—è –õ–µ—Å—è! üíï",
          style: "title"
        },
        {
          type: "text",
          content: "–≠—Ç–æ—Ç –æ—Å–æ–±–µ–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Å —Ç–æ–±–æ–π - —ç—Ç–æ –Ω–æ–≤–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ, –ø–æ–ª–Ω–æ–µ —Å–º–µ—Ö–∞, –ª—é–±–≤–∏ –∏ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤.",
          style: "normal"
        },
        {
          type: "quote",
          content: "Every moment with you is a treasure worth keeping.",
          author: "–¢–≤–æ–π –ª—é–±—è—â–∏–π",
          style: "italic"
        },
        {
          type: "image",
          url: "/uploads/romantic-sunset.jpg",
          caption: "–ü–æ–º–Ω–∏—à—å —ç—Ç–æ—Ç –∑–∞–∫–∞—Ç? –ú—ã —Å–º–æ—Ç—Ä–µ–ª–∏ –Ω–∞ –Ω–µ–≥–æ –≤–º–µ—Å—Ç–µ...",
          alt: "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–∫–∞—Ç"
        },
        {
          type: "text",
          content: "–Ø —Ö–æ—á—É, —á—Ç–æ–±—ã —Ç—ã –∑–Ω–∞–ª–∞: —Ç—ã –¥–µ–ª–∞–µ—à—å –º–æ–π –º–∏—Ä —è—Ä—á–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –¢–≤–æ—è —É–ª—ã–±–∫–∞ - —ç—Ç–æ –º–æ–µ –ª—é–±–∏–º–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞, –∞ —Ç–≤–æ–π —Å–º–µ—Ö - —Å–∞–º–∞—è –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –º–µ–ª–æ–¥–∏—è.",
          style: "normal"
        },
        {
          type: "gallery",
          images: [
            {
              url: "/uploads/memory-1.jpg",
              caption: "–ù–∞—à–∞ –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ –≤ –ø–∞—Ä–∫–µ",
              alt: "–ü—Ä–æ–≥—É–ª–∫–∞ –≤ –ø–∞—Ä–∫–µ"
            },
            {
              url: "/uploads/memory-2.jpg",
              caption: "–¢–æ—Ç –¥–µ–Ω—å, –∫–æ–≥–¥–∞ –º—ã –≥–æ—Ç–æ–≤–∏–ª–∏ –≤–º–µ—Å—Ç–µ",
              alt: "–ì–æ—Ç–æ–≤–∏–º –≤–º–µ—Å—Ç–µ"
            },
            {
              url: "/uploads/memory-3.jpg",
              caption: "–ù–∞—à –ø–æ—Ö–æ–¥ –≤ –º—É–∑–µ–π",
              alt: "–í –º—É–∑–µ–µ"
            }
          ],
          layout: "grid"
        },
        {
          type: "text",
          content: "–≠—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ - –ª–∏—à—å –º–∞–ª–µ–Ω—å–∫–∞—è —á–∞—Å—Ç—å —Ç–æ–≥–æ, –∫–∞–∫ —Å–∏–ª—å–Ω–æ —è —Ç–µ–±—è —Ü–µ–Ω—é. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ —Ç—ã –µ—Å—Ç—å –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏! ‚ú®",
          style: "subtitle"
        },
        {
          type: "audio",
          url: "/uploads/our-song.mp3",
          caption: "–ù–∞—à–∞ –ø–µ—Å–Ω—è - –ø–æ—Å–ª—É—à–∞–π –∏ –≤—Å–ø–æ–º–Ω–∏ —Ç–æ—Ç –≤–µ—á–µ—Ä...",
          title: "–ù–∞—à–∞ –æ—Å–æ–±–µ–Ω–Ω–∞—è –º–µ–ª–æ–¥–∏—è"
        }
      ],
      metadata: {
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString(),
        version: "1.0"
      }
    };

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const contentPath = generateContentPath(giftRecord.id);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Ñ–∞–π–ª
    const contentSaved = await saveGiftContent(contentPath, content);
    
    if (!contentSaved) {
      throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–¥–∞—Ä–∫–∞");
    }

    console.log(`üìÑ –ö–æ–Ω—Ç–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: ${contentPath}`);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø—É—Ç–µ–º –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É
    const updatedGift = await db.gift.update({
      where: { id: giftRecord.id },
      data: { contentPath: contentPath }
    });

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª–∞—Ä–æ–∏–¥–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞
    const memoryPhoto = await db.memoryPhoto.create({
      data: {
        text: "@savdis", // –Ω–∏–∫–Ω–µ–π–º –Ω–∞ –ø–æ–ª–∞—Ä–æ–∏–¥–µ
        photoUrl: "/uploads/polaroid-memory.jpg", // URL –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        giftId: giftRecord.id
      }
    });

    console.log(`üì∏ –°–æ–∑–¥–∞–Ω–∞ –ø–æ–ª–∞—Ä–æ–∏–¥–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Å ID: ${memoryPhoto.id}`);
    console.log("üéâ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!");
    console.log(`üìã –î–µ—Ç–∞–ª–∏ –ø–æ–¥–∞—Ä–∫–∞:`);
    console.log(`   ID: ${updatedGift.id}`);
    console.log(`   –ù–æ–º–µ—Ä: ${updatedGift.number}`);
    console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${updatedGift.title}`);
    console.log(`   –¢–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏: "${updatedGift.hintText}"`);
    console.log(`   –ö–æ–¥: ${updatedGift.code}`);
    console.log(`   URL: http://localhost:3000/gift/${updatedGift.id}`);

    return updatedGift;

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞:", error);
    throw error;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞
async function createSecretTestGift() {
  console.log("üîí –°–æ–∑–¥–∞—é —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫...");
  
  try {
    const giftRecord = await db.gift.create({
      data: {
        number: Math.floor(Math.random() * 1000) + 1000,
        title: "–°–µ–∫—Ä–µ—Ç–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ —Ç–æ–ª—å–∫–æ –¥–ª—è –õ–µ—Å–∏",
        isSecret: true,
        openDate: new Date(),
        englishDescription: "Some secrets are meant to be shared only with you.",
        hintImageUrl: "/uploads/secret-hint.jpg",
        hintText: "—ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ –≤–∏–¥–∏—à—å —Ç–æ–ª—å–∫–æ —Ç—ã üíï",
        code: null,
        contentPath: ""
      }
    });

    const content: GiftContent = {
      blocks: [
        {
          type: "secret",
          content: [
            {
              type: "text",
              content: "–≠—Ç–æ –Ω–∞—à –º–∞–ª–µ–Ω—å–∫–∏–π —Å–µ–∫—Ä–µ—Ç... ü§´",
              style: "title"
            },
            {
              type: "text",
              content: "–¢–æ–ª—å–∫–æ —Ç—ã –º–æ–∂–µ—à—å –≤–∏–¥–µ—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ó–¥–µ—Å—å —è —Ö–æ—á—É —Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ, —á—Ç–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–≤–æ–∏—Ö –≥–ª–∞–∑.",
              style: "normal"
            },
            {
              type: "quote",
              content: "Some secrets are meant to be shared only with you.",
              style: "italic"
            },
            {
              type: "text",
              content: "–¢—ã - —Å–∞–º—ã–π –≤–∞–∂–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏, –∏ —è —Ö–æ—á—É, —á—Ç–æ–±—ã —É –Ω–∞—Å –±—ã–ª–∏ –æ—Å–æ–±–µ–Ω–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç —Ç–æ–ª—å–∫–æ –Ω–∞–º –¥–≤–æ–∏–º. üíï",
              style: "normal"
            }
          ],
          accessMessage: "Oops, only Lesya sees this content"
        }
      ],
      metadata: {
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString(),
        version: "1.0"
      }
    };

    const contentPath = generateContentPath(giftRecord.id);
    const contentSaved = await saveGiftContent(contentPath, content);
    
    if (!contentSaved) {
      throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç");
    }

    const updatedGift = await db.gift.update({
      where: { id: giftRecord.id },
      data: { contentPath: contentPath }
    });

    console.log("üîí –°–µ–∫—Ä–µ—Ç–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ —Å–æ–∑–¥–∞–Ω!");
    console.log(`   ID: ${updatedGift.id}`);
    console.log(`   URL: http://localhost:3000/gift/${updatedGift.id}`);

    return updatedGift;

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞:", error);
    throw error;
  }
}

async function main() {
  try {
    // –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫
    const gift1 = await createTestGift();
    
    // –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫
    const gift2 = await createSecretTestGift();
    
    console.log("\nüéä –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–¥–∞—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!");
    console.log("\nüìã –°–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤:");
    console.log(`1. –û–±—ã—á–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫: http://localhost:3000/gift/${gift1.id}`);
    console.log(`2. –°–µ–∫—Ä–µ—Ç–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫: http://localhost:3000/gift/${gift2.id}`);
    
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞:", error);
    process.exit(1);
  }
}

main()
  .then(() => {
    console.log("\n‚ú® –ì–æ—Ç–æ–≤–æ! –ú–æ–∂–µ—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∞—Ä–∫–∏.");
    process.exit(0);
  })
  .catch((error) => {
    console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error);
    process.exit(1);
  }); 