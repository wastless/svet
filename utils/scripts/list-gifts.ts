import { db } from "../../src/server/db";

async function listAllGifts() {
  console.log("üéÅ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n");
  
  try {
    const gifts = await db.gift.findMany({
      orderBy: { number: 'asc' }
    });

    if (gifts.length === 0) {
      console.log("‚ùå –ü–æ–¥–∞—Ä–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
      return;
    }

    gifts.forEach((gift, index) => {
      const now = new Date();
      const isAvailable = now >= gift.openDate;
      console.log(`   ‚è∞ –°—Ç–∞—Ç—É—Å: ${isAvailable ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∏—è'}`);
      
      console.log('   ' + '‚îÄ'.repeat(50));
    });

    console.log(`\nüìä –í—Å–µ–≥–æ –ø–æ–¥–∞—Ä–∫–æ–≤: ${gifts.length}`);
    console.log(`üîì –î–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ–π—á–∞—Å: ${gifts.filter(g => new Date() >= g.openDate).length}`);
    console.log(`üîí –°–µ–∫—Ä–µ—Ç–Ω—ã—Ö: ${gifts.filter(g => g.isSecret).length}`);

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–¥–∞—Ä–∫–æ–≤:", error);
    process.exit(1);
  }
}

listAllGifts()
  .then(() => {
    console.log("\n‚ú® –ì–æ—Ç–æ–≤–æ!");
    process.exit(0);
  })
  .catch((error) => {
    console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error);
    process.exit(1);
  }); 