"use client";

import { useQuery } from "@tanstack/react-query";
import { useCallback } from "react";

// –ö–ª—é—á –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å–µ—Å—Å–∏–∏
export const AUTH_SESSION_KEY = "auth-session";

// –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é –∏–∑ localStorage, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
const getSavedSession = () => {
  if (typeof window === 'undefined') return null;
  
  try {
    const saved = localStorage.getItem('auth_session_cache');
    if (saved) {
      const parsed = JSON.parse(saved);
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Å—Å–∏—è –Ω–µ —É—Å—Ç–∞—Ä–µ–ª–∞
      const expiresAt = new Date(parsed.expiresAt || 0);
      if (expiresAt > new Date()) {
        return parsed.data;
      }
    }
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏:', e);
  }
  
  return null;
};

// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é –≤ localStorage –¥–ª—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞–º–∏
const saveSession = (data: any) => {
  if (typeof window === 'undefined') return;
  
  try {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ä–æ–∫ –∂–∏–∑–Ω–∏ –∫–µ—à–∞ - 30 –º–∏–Ω—É—Ç
    const expiresAt = new Date(Date.now() + 30 * 60 * 1000);
    localStorage.setItem('auth_session_cache', JSON.stringify({
      data,
      expiresAt: expiresAt.toISOString(),
    }));
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏:', e);
  }
};

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤
 */
export function useAuthSession() {
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
  const fetchSession = useCallback(async () => {
    console.log('üîë Fetching session data');
    const res = await fetch('/api/auth/session');
    const session = await res.json();
    
    const data = {
      user: session?.user || null,
      isAuthenticated: !!session?.user,
      expires: session?.expires || null,
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é –≤ localStorage
    saveSession(data);
    
    return data;
  }, []);

  return useQuery({
    queryKey: [AUTH_SESSION_KEY],
    queryFn: fetchSession,
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    initialData: getSavedSession,
    staleTime: 30 * 60 * 1000, // –ö–µ—à–∏—Ä—É–µ–º –Ω–∞ 30 –º–∏–Ω—É—Ç
    gcTime: 60 * 60 * 1000, // –•—Ä–∞–Ω–∏—Ç—å –≤ –∫–µ—à–µ 1 —á–∞—Å
    refetchOnWindowFocus: false, // –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –æ–∫–Ω–∞
    refetchOnMount: false, // –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    refetchOnReconnect: false, // –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
  });
} 